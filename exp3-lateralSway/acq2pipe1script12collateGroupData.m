% Collate all group data
clearvars -except GD2;clc;close all

folderPathExperiment = 'D:\exp02';

% Load group data structure if it exists
if exist('GD2','var') == 1
    fprintf('GD2 already in workspace\n')
elseif exist([folderPathExperiment '\' 'groupData.mat'],'file')
    load([folderPathExperiment '\' 'groupData.mat'],'GD2');
end

% Set condition name
conditionList = fieldnames(GD2);
nConditions = numel(conditionList);

% Clean subject data
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2.(conditionList{iConditions}));
    nSubjects = numel(subjectList);
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis
            GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                structfun(...
                @deleteOutliers,...
                GD2.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
        end
    end
end

% Mean subject data
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2.(conditionList{iConditions}));
    nSubjects = numel(subjectList);
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis
            measureList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}));
            if length(GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{1}))...
                    < 99
                GD2mean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                    structfun(...
                    @(x) mean(x,2,'omitnan'),...
                    GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                    'UniformOutput',false);
            else
                GD2mean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                    structfun(...
                    @(x) mean(x,1,'omitnan'),...
                    GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                    'UniformOutput',false);
            end
        end
    end
end

% Load subject data table
dataTable = readtable([folderPathExperiment '\dataTable.xlsx']);

% Array of subject means
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2.(conditionList{iConditions}));
    nSubjects = numel(subjectList); 
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        
        subjectName = subjectList{iSubjects};
        iSubjectTable = find(contains(dataTable.subject,subjectName));
        subjectMass = dataTable.mass(iSubjectTable);
        
        for iAnalysis = 1:nAnalysis
            measureList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}));
            nMeasures = numel(measureList);
            for iMeasures = 1:nMeasures
                if contains(measureList{iMeasures},["NegExt","NegFlex","PosFlex","PosExt"])
                    GD2arrayOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects) = ...
                        mean(GD2mean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures}));
                else
                    GD2arrayOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects,:) = ...
                        GD2mean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures});
                end           
            end
        end
    end
end

% Mean of means
for iConditions = 1:nConditions
    analysisList = fieldnames(GD2arrayOfMeans.(conditionList{iConditions}));
    nAnalysis = numel(analysisList);
    for iAnalysis = 1:nAnalysis   
        GD2meanOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) mean(x,1,'omitnan'),...
            GD2arrayOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
    end    
end

% Std of means
for iConditions = 1:nConditions
    analysisList = fieldnames(GD2arrayOfMeans.(conditionList{iConditions}));
    nAnalysis = numel(analysisList);
    for iAnalysis = 1:nAnalysis   
        GD2stdOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) std(x,0,1,'omitnan'),...
            GD2arrayOfMeans.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
    end    
end

% Peak subject data
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2.(conditionList{iConditions}));
    nSubjects = numel(subjectList);
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis
            measureList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}));
            [GD2peaks.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                GD2peakLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis})] = ...
                structfun(...
                @(x) max(x,[],2),...
                GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
            %Troughs
            [GD2troughs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                GD2troughLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis})] = ...
                structfun(...
                @(x) min(x,[],2),...
                GD2clean.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
        end
    end
end

% Convert peak locations from indices to crank angle
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2.(conditionList{iConditions}));
    nSubjects = numel(subjectList);
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis
            measureList = fieldnames(GD2.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}));
            [GD2peakLocsDegrees.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis})] = ...
                structfun(...
                @(x) x*(360/101),...
                GD2peakLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
            %Troughs
            [GD2troughLocsDegrees.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis})] = ...
                structfun(...
                @(x) x*(360/101),...
                GD2troughLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
        end
    end
end

% Mean of peaks
for iConditions = 1:nConditions
     subjectList = fieldnames(GD2peaks.(conditionList{iConditions}));
     nSubjects = numel(subjectList);
     for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2peaks.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis    
            GD2meanOfPeaks.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                structfun(...
                @(x) mean(x,1,'omitnan'),...
                GD2peaks.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
            GD2meanOfPeakLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                structfun(...
                @(x) mean(x,1,'omitnan'),...
                GD2peakLocsDegrees.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
            %Troughs
            GD2meanOfTroughs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                structfun(...
                @(x) mean(x,1,'omitnan'),...
                GD2troughs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
            GD2meanOfTroughLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}) = ...
                structfun(...
                @(x) mean(x,1,'omitnan'),...
                GD2troughLocsDegrees.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}),...
                'UniformOutput',false);
        end
     end
end

% Array of mean peaks
for iConditions = 1:nConditions
    subjectList = fieldnames(GD2peaks.(conditionList{iConditions}));
    nSubjects = numel(subjectList);
    for iSubjects = 1:nSubjects
        analysisList = fieldnames(GD2peaks.(conditionList{iConditions}).(subjectList{iSubjects}));
        nAnalysis = numel(analysisList);
        for iAnalysis = 1:nAnalysis
            measureList = fieldnames(GD2peaks.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}));
            nMeasures = numel(measureList);
            for iMeasures = 1:nMeasures
                GD2arrayOfMeanPeaks.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects) = ...
                    mean(GD2meanOfPeaks.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures}));
                GD2arrayOfMeanPeakLocs.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects) = ...
                    mean(GD2meanOfPeakLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures}));
                %Troughs
                GD2arrayOfMeanTroughs.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects) = ...
                    mean(GD2meanOfTroughs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures}));
                GD2arrayOfMeanTroughLocs.(conditionList{iConditions}).(analysisList{iAnalysis}).(measureList{iMeasures})(iSubjects) = ...
                    mean(GD2meanOfTroughLocs.(conditionList{iConditions}).(subjectList{iSubjects}).(analysisList{iAnalysis}).(measureList{iMeasures}));
            end
        end
    end
end

% Mean of mean peaks
for iConditions = 1:nConditions
    analysisList = fieldnames(GD2arrayOfMeanPeaks.(conditionList{iConditions}));
    nAnalysis = numel(analysisList);
    for iAnalysis = 1:nAnalysis  
        GD2meanOfMeanPeaks.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) mean(x,2,'omitnan'),...
            GD2arrayOfMeanPeaks.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        GD2meanOfMeanPeakLocs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) mean(x,2,'omitnan'),...
            GD2arrayOfMeanPeakLocs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        %Troughs
        GD2meanOfMeanTroughs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) mean(x,2,'omitnan'),...
            GD2arrayOfMeanTroughs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        GD2meanOfMeanTroughLocs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) mean(x,2,'omitnan'),...
            GD2arrayOfMeanTroughLocs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
    end    
end

% Std of mean peaks
for iConditions = 1:nConditions
    analysisList = fieldnames(GD2arrayOfMeanPeaks.(conditionList{iConditions}));
    nAnalysis = numel(analysisList);
    for iAnalysis = 1:nAnalysis   
        GD2stdOfMeanPeaks.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) std(x,0,2,'omitnan'),...
            GD2arrayOfMeanPeaks.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        GD2stdOfMeanPeakLocs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) std(x,0,2,'omitnan'),...
            GD2arrayOfMeanPeakLocs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        %Troughs
        GD2stdOfMeanTroughs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) std(x,0,2,'omitnan'),...
            GD2arrayOfMeanTroughs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
        GD2stdOfMeanTroughLocs.(conditionList{iConditions}).(analysisList{iAnalysis}) = ...
            structfun(...
            @(x) std(x,0,2,'omitnan'),...
            GD2arrayOfMeanTroughLocs.(conditionList{iConditions}).(analysisList{iAnalysis}),...
            'UniformOutput',false);
    end    
end

save([folderPathExperiment '\' 'groupData'],'GD2','GD2clean','GD2mean',...
    'GD2arrayOfMeans','GD2meanOfMeans','GD2stdOfMeans',...
    'GD2peaks','GD2meanOfPeaks','GD2arrayOfMeanPeaks',...
    'GD2meanOfMeanPeaks','GD2stdOfMeanPeaks','GD2peakLocsDegrees','GD2meanOfPeakLocs',...
    'GD2arrayOfMeanPeakLocs','GD2meanOfMeanPeakLocs','GD2stdOfMeanPeakLocs','GD2peakLocs',...
    'GD2troughs','GD2meanOfTroughs','GD2arrayOfMeanTroughs',...
    'GD2meanOfMeanTroughs','GD2stdOfMeanTroughs','GD2troughLocsDegrees','GD2meanOfTroughLocs',...
    'GD2arrayOfMeanTroughLocs','GD2meanOfMeanTroughLocs','GD2stdOfMeanTroughLocs','GD2troughLocs')
